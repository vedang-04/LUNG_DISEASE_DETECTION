# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

[pytest]
log_cli_level=WARNING

filterwarnings =
    ignore::DeprecationWarning
    ignore::RuntimeWarning
    ignore::UserWarning
    ignore::FutureWarning

[tox]
envlist =  run
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

passenv=
	PIP_EXTRA_INDEX_URL
deps=
	#-rrequirements/test_requirements.txt
	-rrequirements_api/test_requirements.txt
commands=
	py.test

[testenv:test_api]
envdir = {toxworkdir}/test_api
deps =
	{[testenv]deps}

passenv=
	{[testenv]passenv}

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-s \
	-vv \
	{posargs:app/tests/}
	{posargs:isort app}
	{posargs:black app}
	{posargs:flake8 app}
	#{posargs:mypy app}

[testenv:run]
envdir = {toxworkdir}/test_api
deps =
	{[testenv]deps}

setenv =
	{[testenv:test_api]setenv}

commands=
	python app/application.py


[flake8]
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.venv,alembic
max-line-length = 100
